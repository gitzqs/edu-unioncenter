<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd">
    
  	<!-- 引入jdbc.properties配置文件 -->  
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/> 
    
    <!--创建jdbc数据源 -->  
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
    	init-method="init" destroy-method="close">  
    	
        <property name="driverClassName" value="${jdbc.driver}"/> 
        <property name="url" value="${jdbc.url}"/>  
        <property name="username" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>
        <property name="filters" value="${jdbc.filters}" />
 
	    <property name="maxActive" value="${jdbc.maxActive}" />
	    <property name="initialSize" value="${jdbc.initialSize}" />
	    <property name="maxWait" value="${jdbc.maxWait}" />
	    <property name="minIdle" value="${jdbc.minIdle}" />
	 
	    <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
	    <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
	 
	    <property name="validationQuery" value="${jdbc.validationQuery}" />
	    <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
	    <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
	    <property name="testOnReturn" value="${jdbc.testOnReturn}" />
	     
	    <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPrepareStatementPerConnerctionSize}" />
        
    </bean>
    
    
    <!-- 创建SqlSessionFactory，同时指定数据源 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" /> 
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml" /> 
    </bean>
    <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper进行注入，生成代理对象 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> 
      <!-- 映射的xml文件包 注意xml文件名要和Mapper接口文件名相同-->
        <property name="basePackage" value="com.zqs.dao" />
    </bean>  
    
     <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
	
    <!-- 可通过注解控制事务 -->  
    <tx:annotation-driven /> 
    <context:component-scan base-package="com.zqs.service.*"/> 
    
</beans>